---
- name: Create partition
  hosts: all
  become: true

  tasks:
  # Retrieve the device info so we can define the number, part_start & part_end for the partition
  - name: Read device information of /dev/xvdf
    parted: device=/dev/xvdf unit=MiB
    register: device_info
    no_log: true
  # Retrieves disk list
  - name: get disk list
    shell: "parted -l"
    register: disks
    no_log: true
  # Prints out the available disks
  - name: Display parted list
    debug:
      msg: "{{ disks.stdout.split('\n') }}"
  # retrieve what disk needs to be used
  - pause:
      prompt: "Please enter the disk name you wish to use"
      echo: yes
    register: result
  - set_fact:
      device: "{{ result.user_input }}"
    no_log: true
  # test with ls to see if disk exists
  - name: Check if disk exists
    shell: "ls {{ device }}"
  - debug:
      msg: "Using device: {{ device }}"
  # get and show available disk space
  - name: get free space of chosen device
    shell: "parted {{ device }} unit MB print free | grep 'Free Space' | tail -n1 | awk '{print \"Free space: \" $3}'"
    register: freeSpace
  - debug:
      msg: "{{ freeSpace.stdout }}"
  # retrieve what partition size needs to be used
  - pause:
      prompt: "Please provide partition size in MB format"
      echo: yes
    register: size
  - set_fact:
      device: "{{ size.user_input }}"
    no_log: true
  - name: Ensure that file size is a whole positive number
    assert:
      that:
        - size | type_debug == "int"
        - size is regex("^[0-9]+$")