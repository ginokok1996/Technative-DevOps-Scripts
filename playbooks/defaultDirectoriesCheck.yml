---
# This playbook makes sure the provided directory containts the following directores:
# /data, /appl, /apps
- name: apps, appl & data directories check
  hosts: all
  become: true
  vars:
    dirNames: ["data", "appl", "apps"]

  tasks:
    # Retrieves file systems
  - name: get df list
    shell: "df -hT"
    register: directories
    no_log: true

  # Prints out the file systems
  - name: Display df list
    debug:
      msg: "{{ directories.stdout }}"

  # Retrieves what directory needs to be checked
  - pause:
      prompt: "What directory do you want to check?"
      echo: yes
    register: result

  - set_fact:
      directory: "{{ result.user_input }}"
    no_log: true

  # checks if provided directory exists
  - name: Check if provided directory exists
    stat:
      path: "{{ directory }}"
    register: mainDirectory

  # throw error if directory doesn't exist
  - name: Throw error if provided directory doesn't exist
    fail:
      msg: "{{ directory }} doesn't exist"
    when: not mainDirectory.stat.exists

  - debug:
      msg: "{{ dirNames }}"

  # check the default directories that need to be present
  - name: Check if the directories exist
    stat:
      path: "{{ directory }}/{{ item }}"
    with_items: "{{ dirNames }}"
    register: directories

  # create directories if not present
  - name: Create directories if they don't exist
    file:
      path: "{{ directory }}/{{ item.item }}"
      state: directory
      mode: '0755'
    with_items: "{{ directories.results }}"
    when: not item.stat.exists